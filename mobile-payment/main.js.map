{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/info-snackbar/info-snackbar.component.ts","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.scss","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/operator/operator.component.html","webpack:///./src/app/operator/operator.component.scss","webpack:///./src/app/operator/operator.component.ts","webpack:///./src/app/services/requester.service.ts","webpack:///./src/app/validators/noLess.validator.ts","webpack:///./src/app/validators/noMore.validator.ts","webpack:///./src/app/validators/rightCode.validator.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,sKAAsK,cAAc,oO;;;;;;;;;;;ACApL,8BAA8B,gBAAgB,kBAAkB,EAAE,sBAAsB,kBAAkB,4BAA4B,EAAE,G;;;;;;;;;;;;;;;;;;;;;ACA9F;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACc;AACA;AACW;AACV;AAET;AACgC;AACzB;AACY;AASvC;AACyB;AAC4B;AAEzE,IAAM,SAAS,GAAW;IAC/B,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE,SAAS,EAAE,MAAM,EAAE;IACzD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,8EAAiB,EAAE;CACvD,CAAC;AAmCF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;gBACb,8EAAiB;gBACjB,6FAAqB;aACtB;YACD,eAAe,EAAE;gBACf,6FAAqB;aACtB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,oEAAS,CAAC,OAAO,EAAE;gBACnB,4DAAY,CAAC,OAAO,CAClB,SAAS,EACT,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,8BAA8B;iBACvD;gBACD,mEAAgB;gBAChB,gEAAa;gBACb,gEAAa;gBACb,qEAAkB;gBAClB,iEAAc;gBACd,kEAAe;gBACf,0DAAW;gBACX,kEAAc;gBACd,qEAAgB;gBAChB,kEAAmB;gBACnB,oEAAiB;aAClB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7D0B;AACK;AAMrD;IACE,+BAA+C,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;IAAI,CAAC;IADlD,qBAAqB;QAJjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,QAAQ,EAAE,UAAU;SACrB,CAAC;QAEa,uEAAM,CAAC,oEAAkB,CAAC;;OAD5B,qBAAqB,CAEjC;IAAD,4BAAC;CAAA;AAFiC;;;;;;;;;;;;ACPlC,yQAAyQ,aAAa,6R;;;;;;;;;;;ACAtR,0CAA0C,oBAAoB,EAAE,wBAAwB,kBAAkB,kBAAkB,wBAAwB,qBAAqB,EAAE,wCAAwC,sBAAsB,wBAAwB,mBAAmB,qBAAqB,EAAE,kCAAkC,uBAAuB,mBAAmB,kBAAkB,qBAAqB,mBAAmB,EAAE,+BAA+B,kBAAkB,yBAAyB,aAAa,cAAc,eAAe,gBAAgB,mBAAmB,wBAAwB,kBAAkB,iKAAiK,yBAAyB,oBAAoB,oEAAoE,EAAE,qCAAqC,mBAAmB,EAAE,+BAA+B,0BAA0B,sBAAsB,EAAE,4CAA4C,2BAA2B,EAAE,EAAE,+BAA+B,0BAA0B,yBAAyB,2BAA2B,0BAA0B,EAAE,4CAA4C,sBAAsB,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACAnwC;AACuB;AAQjE;IAGE,uBAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAC7C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAI+B,4EAAgB;OAHpC,aAAa,CAMzB;IAAD,oBAAC;CAAA;AANyB;;;;;;;;;;;;ACT1B,2yBAA2yB,gBAAgB,sjCAAsjC,+BAA+B,uhC;;;;;;;;;;;ACAh5D,qCAAqC,oBAAoB,EAAE,oBAAoB,sBAAsB,EAAE,eAAe,gBAAgB,EAAE,+BAA+B,iBAAiB,yBAAyB,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3K;AACe;AACQ;AAEuB;AACtB;AACd;AACA;AACJ;AACiC;AAQjF;IAME,2BAAoB,MAAc,EACd,KAAqB,EACtB,QAAqB,EACpB,SAA2B,EAC3B,EAAe;QAJf,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,aAAQ,GAAR,QAAQ,CAAa;QACpB,cAAS,GAAT,SAAS,CAAkB;QAC3B,OAAE,GAAF,EAAE,CAAa;QAP5B,cAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACpH,eAAU,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAOvD,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,KAAK,EAAE,CAAC,EAAE,EAAE;oBACV,yDAAU,CAAC,QAAQ;oBACnB,+EAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;oBACtC,yDAAU,CAAC,OAAO,CAAC,uFAAuF,CAAC;iBAC5G,CAAC;YACF,MAAM,EAAE,CAAC,EAAE,EAAE;oBACX,yDAAU,CAAC,QAAQ;oBACnB,4EAAM,CAAC,CAAC,CAAC;oBACT,4EAAM,CAAC,IAAI,CAAC;iBACb,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR,UAAS,aAAiC;QAA1C,iBAuBC;QAtBC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;aACrC,IAAI,CAAC,UAAC,GAAG;YACR,KAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,4FAAqB,EAAE;gBACrD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAK,GAAG,CAAC,IAAI,CAAC,OAAO,UAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,mBAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,mEAC5B;aACnD,CAAC,CAAC;YACH,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtB,aAAa,CAAC,SAAS,EAAE,CAAC;YAC1B,KAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC;YACvC,UAAU,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9B,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,4FAAqB,EAAE;gBACrD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAK,GAAG,CAAC,IAAI,CAAC,OAAO,UAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,mBAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,mCAC5D;aACnB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAtDU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAO4B,sDAAM;YACP,8DAAc;YACZ,6DAAW;YACT,4EAAgB;YACvB,0DAAW;OAVxB,iBAAiB,CAwD7B;IAAD,wBAAC;CAAA;AAxD6B;;;;;;;;;;;;;;;;;;;;;;ACjBa;AAQ3C;IAAA;IAwBA,CAAC;IAtBQ,sCAAW,GAAlB,UAAmB,EAAe;QAAf,2BAAc,CAAC;QAChC,IAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,EAAE,KAAK,EAAE,EAAd,CAAc,CAAC,CAAC;QAC1D,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACvC,CAAC;IAEM,0CAAe,GAAtB;QACE,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEM,+BAAI,GAAX,UAAY,IAAc;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,8CAA8C;QAC9C,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,UAAU,CAAC;gBACT,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC9B,OAAO,CAAC,EAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,uBAAuB,EAAC,EAAC,CAAC,CAAC;gBAC9F,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,EAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,mBAAmB,EAAC,EAAC,CAAC,CAAC;gBAC1F,CAAC;YACH,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAvBU,gBAAgB;QAJ5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OAEW,gBAAgB,CAwB5B;IAAD,uBAAC;CAAA;AAxB4B;AA0B7B,IAAM,SAAS,GAAG;IAChB;QACE,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,4BAA4B;QAClC,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;KAChI;IACD;QACE,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,wBAAwB;QAC9B,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;KACrI;IACD;QACE,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,4BAA4B;QAClC,EAAE,EAAE,CAAC;QACL,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;KAChI;CA2BF,CAAC;;;;;;;;;;;;;;;AC7EY,gBAAiB,SAAiB;IAC9C,MAAM,CAAC,UAAC,OAAwB;QAC9B,IAAM,KAAK,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,SAAS,CAAC;QACzC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,QAAQ,EAAE,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAC,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5D,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;;;ACLa,gBAAiB,SAAiB;IAC9C,MAAM,CAAC,UAAC,OAAwB;QAC9B,IAAM,KAAK,GAAG,CAAC,OAAO,CAAC,KAAK,IAAI,SAAS,CAAC;QAC1C,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,QAAQ,EAAE,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAC,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5D,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;;;ACLa,2BAA4B,KAAe;IACvD,MAAM,CAAC,UAAC,OAAwB;QAC9B,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,IAAM,WAAW,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACtE,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,KAAK,CAAC,OAAO,CAAC,cAAI;gBAChB,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;oBAC7B,KAAK,GAAG,IAAI,CAAC;gBACf,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,mBAAmB,EAAE,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAC,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACvE,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;;ACfD;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"d-flex align-items-center\\\">\\n  <a routerLink=\\\"/\\\" routerLinkActive=\\\"d-none\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\" class=\\\"logo-icon mr-2 justify-content-center align-items-center\\\">\\n    <mat-icon>arrow_back</mat-icon>\\n  </a>\\n  <div>Mobile Payment</div>\\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n<!--<AppFooter></AppFooter>-->\\n\"","module.exports = \".logo-icon {\\n  color: #fff;\\n  display: flex; }\\n  .logo-icon:hover {\\n    color: #fff;\\n    text-decoration: none; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainComponent } from './main/main.component';\nimport { OperatorComponent } from './operator/operator.component';\n\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule, MatSnackBarModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { InfoSnackbarComponent } from './info-snackbar/info-snackbar.component';\n\nexport const appRoutes: Routes = [\n  { path: '', component: MainComponent, pathMatch: 'full' },\n  { path: 'operator/:id', component: OperatorComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    OperatorComponent,\n    InfoSnackbarComponent,\n  ],\n  entryComponents: [\n    InfoSnackbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgbModule.forRoot(),\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true } // <-- debugging purposes only\n    ),\n    MatToolbarModule,\n    MatCardModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    TextMaskModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Inject} from '@angular/core';\nimport {MAT_SNACK_BAR_DATA} from '@angular/material';\n\n@Component({\n  selector: 'app-snackbar-info',\n  template: '{{data}}',\n})\nexport class InfoSnackbarComponent {\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n}\n","module.exports = \"<div class=\\\"operator-main-wrapper\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-sm-6 col-md-4 col-lg-3\\\" *ngFor=\\\"let operator of operators\\\">\\n        <a class=\\\"h-100 d-block\\\" routerLink=\\\"/operator/{{operator.id}}\\\">\\n          <mat-card class=\\\"operator-mat-card\\\">\\n            <img  mat-card-image [src]=\\\"operator.logo\\\" *ngIf=\\\"operator.logo\\\">\\n            <mat-icon *ngIf=\\\"!operator.logo\\\">phone</mat-icon>\\n          </mat-card>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".operator-main-wrapper {\\n  padding: 30px 0; }\\n\\n.operator-mat-card {\\n  height: 175px;\\n  display: flex;\\n  margin-bottom: 30px;\\n  box-shadow: none; }\\n\\n.operator-mat-card .mat-card-image {\\n    max-width: 100%;\\n    max-height: 120px;\\n    margin: auto;\\n    display: block; }\\n\\n.operator-mat-card .mat-icon {\\n    font-size: 130px;\\n    height: auto;\\n    width: auto;\\n    display: block;\\n    margin: auto; }\\n\\n.operator-mat-card:before {\\n    content: '';\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    margin: auto;\\n    background: black;\\n    z-index: -1;\\n    box-shadow: 0px 1px 2px #000, 0px 3px 3px rgba(0, 0, 0, 0), 0px 10px 10px rgba(0, 0, 0, 0), 0px 14px 14px rgba(0, 0, 0, 0), 0px 19px 19px rgba(0, 0, 0, 0);\\n    border-radius: 2px;\\n    opacity: 0.24;\\n    transition: opacity 0.7s 0.01s cubic-bezier(0.19, 1, 0.22, 1); }\\n\\n.operator-mat-card:hover:before {\\n    opacity: 0.6; }\\n\\n@media (min-width: 576px) {\\n    .operator-mat-card {\\n      height: 245px; }\\n      .operator-mat-card .mat-card-image {\\n        max-width: 160px; } }\\n\\n@media (max-width: 576px) {\\n    .operator-mat-card {\\n      max-width: 300px;\\n      margin-right: auto;\\n      margin-left: auto; }\\n      .operator-mat-card .mat-card-image {\\n        width: auto; } }\\n\"","import { Component } from '@angular/core';\nimport { RequesterService } from '../services/requester.service';\nimport { MobileOperator } from '../typings';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent {\n  operators: MobileOperator[];\n\n  constructor(private requester: RequesterService) {\n    this.operators = requester.getAllOperators();\n  }\n}\n","module.exports = \"<section class=\\\"operator-wrapper\\\">\\n  <div class=\\\"container\\\">\\n    .\\n    <div class=\\\"row align-items-center justify-content-center mb-30\\\">\\n      <div class=\\\"d-flex align-items-center\\\">\\n        <img [src]=\\\"operator.logo\\\" alt=\\\"\\\" class=\\\"operator-logo\\\">\\n      </div>\\n    </div>\\n    <form [formGroup]=\\\"fillForm\\\" #formDirective=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(formDirective)\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-12 col-lg-8 full-width-input\\\">\\n          <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Mobile Phone</mat-label>\\n            <input type=\\\"tel\\\"\\n                   matInput\\n                   formControlName=\\\"phone\\\"\\n                   name=\\\"phone\\\" id=\\\"phone\\\"\\n                   [textMask]=\\\"{mask: phoneMask}\\\"\\n                   placeholder=\\\"+7 (999) 999-9999\\\">\\n            <mat-error\\n              *ngIf=\\\"!fillForm.get('phone').hasError('required') && fillForm.get('phone').hasError('pattern') && !fillForm.get('phone').hasError('validOperatorCode')\\\">\\n              <span>Invalid phone</span>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"!fillForm.get('phone').hasError('required') && fillForm.get('phone').hasError('validOperatorCode')\\\">\\n              <span>Invalid operator code</span>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"fillForm.get('phone').hasError('required')\\\">\\n              <span>Phone is required</span>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"col-md-7\\\"></div>\\n        <div class=\\\"col-12 col-lg-8 full-width-input\\\">\\n          <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Amount</mat-label>\\n            <input matInput\\n                   formControlName=\\\"amount\\\"\\n                   name=\\\"amount\\\" id=\\\"amount\\\"\\n                   [textMask]=\\\"{mask: amountMask, guide: false}\\\"\\n                   type=\\\"tel\\\">\\n            <span matSuffix>₽</span>\\n            <mat-error *ngIf=\\\"!fillForm.get('amount').hasError('required') && fillForm.get('amount').hasError('noLess')\\\">\\n              <span>Should be not less than 1₽</span>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"!fillForm.get('amount').hasError('required') && fillForm.get('amount').hasError('noMore')\\\">\\n              <span>Should be no more than 1000₽</span>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"fillForm.get('amount').hasError('required')\\\">\\n              <span>Amount is required</span>\\n            </mat-error>\\n            <mat-hint>Min 1₽ Max 1000₽</mat-hint>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"col-md-7\\\"></div>\\n        <div class=\\\"col-12 col-lg-8 d-flex justify-content-end\\\">\\n          <button type=\\\"submit\\\" class=\\\"fill-btn\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!fillForm.valid\\\">Fill</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</section>\\n\"","module.exports = \".operator-wrapper {\\n  padding: 30px 0; }\\n\\n.operator-logo {\\n  max-height: 100px; }\\n\\n.fill-btn {\\n  width: 100%; }\\n\\n@media (min-width: 576px) {\\n    .fill-btn {\\n      max-width: 350px; } }\\n\"","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RequesterService } from '../services/requester.service';\nimport { MobileOperator } from '../typings';\nimport { FormBuilder, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport validOperatorCode from '../validators/rightCode.validator';\nimport noLess from '../validators/noLess.validator';\nimport noMore from '../validators/noMore.validator';\nimport { MatSnackBar } from '@angular/material';\nimport { InfoSnackbarComponent } from '../info-snackbar/info-snackbar.component';\n\n\n@Component({\n  selector: 'app-operator',\n  templateUrl: './operator.component.html',\n  styleUrls: ['./operator.component.scss']\n})\nexport class OperatorComponent {\n  operator: MobileOperator;\n  fillForm: FormGroup;\n  public phoneMask = ['+', '7', ' ', '(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/];\n  public amountMask = [/[1-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              public snackBar: MatSnackBar,\n              private requester: RequesterService,\n              private fb: FormBuilder) {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.operator = requester.getOperator(id);\n    this.createForm();\n  }\n\n  createForm() {\n    this.fillForm = this.fb.group({\n      phone: ['', [\n        Validators.required,\n        validOperatorCode(this.operator.codes),\n        Validators.pattern(/^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/gm),\n      ]],\n      amount: ['', [\n        Validators.required,\n        noLess(1),\n        noMore(1000)\n      ]]\n    });\n  }\n\n  onSubmit(formDirective: FormGroupDirective) {\n    this.requester.fill(this.fillForm.value)\n      .then((res) => {\n        this.snackBar.openFromComponent(InfoSnackbarComponent, {\n          duration: 5000,\n          data: `${res.data.message}: ${res.data.sent.amount}₽ for ${res.data.sent.phone}.\n           You will be redirected to main page in 5 seconds`\n        });\n        this.fillForm.reset();\n        formDirective.resetForm();\n        this.fillForm.updateValueAndValidity();\n        setTimeout(() => {\n          this.router.navigate(['/']);\n        }, 5000);\n      })\n      .catch((err) => {\n        console.log(err);\n        this.snackBar.openFromComponent(InfoSnackbarComponent, {\n          duration: 1000,\n          data: `${err.data.message}: ${err.data.sent.amount}₽ for ${err.data.sent.phone}.\n           Try again later.`\n        });\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MobileOperator } from '../typings';\nimport { FillForm, MockFillType } from '../typings';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RequesterService {\n\n  public getOperator(id: number = -1): MobileOperator | null {\n    const operator = operators.filter(item => item.id === id);\n    return operator ? operator[0] : null;\n  }\n\n  public getAllOperators(): MobileOperator[] {\n    return operators;\n  }\n\n  public fill(data: FillForm): Promise<MockFillType> {\n    console.log(data);\n    // return this.http.post('/random', data, {});\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.round(Math.random())) {\n          resolve({status: 200, success: true, data: {sent: data, message: 'Payment is successful'}});\n        } else {\n          reject({status: 500, success: false, data: {sent: data, message: 'Payment is failed'}});\n        }\n      }, 2000);\n    });\n  }\n}\n\nconst operators = [\n  {\n    name: 'Beeline',\n    logo: '/assets/images/beeline.svg',\n    id: 1,\n    codes: [900, 902, 903, 904, 905, 906, 908, 909, 950, 951, 953, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 980, 983, 986]\n  },\n  {\n    name: 'MTS',\n    logo: '/assets/images/mts.svg',\n    id: 2,\n    codes: [902, 904, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 950, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989]\n  },\n  {\n    name: 'Megafon',\n    logo: '/assets/images/megafon.svg',\n    id: 3,\n    codes: [902, 904, 908, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 938, 939, 950, 999]\n  },\n  // {\n  //   name: 'Tele2',\n  //   logo: '/assets/images/tele2.svg',\n  //   id: 4,\n  // },\n  // {\n  //   name: 'Yota',\n  //   logo: '/assets/images/yota.svg',\n  //   id: 5,\n  // },\n  // {\n  //   name: '',\n  //   id: 6,\n  // },\n  // {\n  //   name: '',\n  //   id: 7,\n  // },\n  // {\n  //   name: '',\n  //   id: 8,\n  // },\n  // {\n  //   name: '',\n  //   id: 9,\n  // }\n];\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport default function noLess(threshold: number): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} => {\n    const valid = +control.value > threshold;\n    return !valid ? {'noLess': {value: control.value}} : null;\n  };\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport default function noMore(threshold: number): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} => {\n    const valid = +control.value <= threshold;\n    return !valid ? {'noMore': {value: control.value}} : null;\n  };\n}\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\n\nexport default function validOperatorCode(codes: number[]): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } => {\n    let valid = false;\n    const currentCode = control.value && control.value.match(/\\((\\d+)\\)/);\n    if (currentCode && currentCode[1]) {\n      codes.forEach(item => {\n        if (+currentCode[1] === item) {\n          valid = true;\n        }\n      });\n    }\n    return !valid ? {'validOperatorCode': {value: control.value}} : null;\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}